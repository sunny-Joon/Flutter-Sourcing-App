name: flutter_sourcing_app
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.

version: 1.0.14


environment:
  sdk: '>=3.2.3 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  convert: ^3.0.0
  qr_code_scanner: ^1.0.1
  flutter:
    sdk: flutter
  intl: ^0.19.0  # Use the latest version from pub.dev
  build: ^2.4.1
  device_info_plus: ^11.0.0
  package_info_plus: ^8.0.2
  build_runner: ^2.4.7
  retrofit: ^4.3.0
  json_annotation: ^4.9.0
  dio: ^5.7.0
  flutter_easyloading: ^3.0.5
  provider: ^6.1.2
  pretty_dio_logger: ^1.4.0
  flutter_widget_from_html: ^0.15.2
  permission_handler: ^11.2.2
  gif: ^2.3.0
  sqlite3: ^2.4.6
  path: ^1.8.0
  image_picker: ^1.1.2
  image_cropper: ^8.0.2
  image: ^4.2.0
  zxing2: ^0.2.3
  camera: ^0.11.0+2
  archive: ^3.6.1
  geolocator: ^13.0.1
  horizontal_stepper_flutter: ^1.0.3
  flutter_pdfview: ^1.3.4
  crop_your_image: ^1.1.0
  fluttertoast: ^8.2.1
  audioplayers: ^6.1.0
  carousel_slider: ^5.0.0
  android_intent_plus: ^5.1.0
  flutter_speed_dial: ^7.0.0
  font_awesome_flutter: ^10.8.0
  intl_utils: ^2.8.7
  xml: ^6.2.2
  google_fonts: ^6.2.1
  geocoding: ^3.0.0
  flutter_gif: ^0.0.4
  dropdown_search: ^6.0.1
  shared_preferences: ^2.3.3
  flutter_svg: ^2.0.16

  share_plus: ^7.2.2

  shimmer: ^3.0.0
  firebase_core: ^3.6.0
  firebase_messaging: ^15.1.3
  firebase_app_check: ^0.3.1+3
  flutter_local_notifications: ^17.2.1+2
  flutter_cache_manager: ^3.3.1
  intl_translation: ^0.20.1
  flutter_localizations:
    sdk: flutter




  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2
  curved_navigation_bar: ^1.0.3
  pinput: ^5.0.0
  url_launcher: ^6.3.0
  video_player: ^2.5.1
  flutter_html: ^3.0.0-beta.2


dev_dependencies:
  flutter_test:
    sdk: flutter
  retrofit_generator: ^9.1.2
  connectivity_plus: ^4.0.0

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  generate: true
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/Images/
    - assets/beep.wav
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Poppins-Regular
      fonts:
        - asset: assets/fonts/Poppins-Regular.ttf
    - family: Poppins-Black
      fonts:
        - asset: assets/fonts/Poppins-Black.ttf
    - family: Poppins-Bold
      fonts:
        - asset: assets/fonts/Poppins-Bold.ttf
    - family: Poppins-SemiBold
      fonts:
        - asset: assets/fonts/Poppins-SemiBold.ttf


  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
